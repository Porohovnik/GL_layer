#ifndef ATRIBUTE_TEXTURE_H
#define ATRIBUTE_TEXTURE_H
#include "GL_type_to_cpp.h"
#include "tuple_utl.h"

namespace GL_layer {
using Type_filter_atribute_texture= tutl::Type_to_data<
    tutl::KAAT<TYPE_SETTING_TEXTURE::TEXTURE_WRAP_R,TYPE_ARGUMENT_SETTING_TEXTURE>,
    tutl::KAAT<TYPE_SETTING_TEXTURE::TEXTURE_WRAP_T,TYPE_ARGUMENT_SETTING_TEXTURE>,
    tutl::KAAT<TYPE_SETTING_TEXTURE::TEXTURE_WRAP_S,TYPE_ARGUMENT_SETTING_TEXTURE>,
    tutl::KAAT<TYPE_SETTING_TEXTURE::TEXTURE_SWIZZLE_RGBA,int>,
    tutl::KAAT<TYPE_SETTING_TEXTURE::TEXTURE_SWIZZLE_A,int>,
    tutl::KAAT<TYPE_SETTING_TEXTURE::TEXTURE_SWIZZLE_B,int>,
    tutl::KAAT<TYPE_SETTING_TEXTURE::TEXTURE_SWIZZLE_G,int>,
    tutl::KAAT<TYPE_SETTING_TEXTURE::TEXTURE_SWIZZLE_R,int>,
    tutl::KAAT<TYPE_SETTING_TEXTURE::TEXTURE_MAX_LEVEL,int>,
    tutl::KAAT<TYPE_SETTING_TEXTURE::TEXTURE_MAX_LOD,int>,
    tutl::KAAT<TYPE_SETTING_TEXTURE::TEXTURE_MIN_LOD,int>,
    tutl::KAAT<TYPE_SETTING_TEXTURE::TEXTURE_MAG_FILTER,TYPE_ARGUMENT_SETTING_TEXTURE>,
    tutl::KAAT<TYPE_SETTING_TEXTURE::TEXTURE_MIN_FILTER,TYPE_ARGUMENT_SETTING_TEXTURE>,
    tutl::KAAT<TYPE_SETTING_TEXTURE::TEXTURE_LOD_BIAS,int>,
    tutl::KAAT<TYPE_SETTING_TEXTURE::TEXTURE_COMPARE_MODE,int>,
    tutl::KAAT<TYPE_SETTING_TEXTURE::TEXTURE_COMPARE_FUNC,int>,
    tutl::KAAT<TYPE_SETTING_TEXTURE::TEXTURE_BORDER_COLOR,int>,
    tutl::KAAT<TYPE_SETTING_TEXTURE::TEXTURE_BASE_LEVEL,int>,
    tutl::KAAT<TYPE_SETTING_TEXTURE::DEPTH_STENCIL_TEXTURE_MODE,int>
>;
} // namespace GL_layer
#endif // ATRIBUTE_TEXTURE_H
